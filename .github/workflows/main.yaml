name: main
on:
  push:
    branches: [main]
    tags: "*.*.*"
  pull_request:

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: denoland/setup-deno@v2
      with:
        deno-version: v2.x
    - run: deno task check

  publish:
    if: github.event_name == 'push'
    needs: [check]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
    - uses: actions/checkout@v4
    - uses: denoland/setup-deno@v2
      with:
        deno-version: v2.x
    - if: github.ref_type == 'branch'
      run: |
        jq \
          --arg build "$GITHUB_RUN_NUMBER" \
          --arg commit "${GITHUB_SHA::8}" \
          '.version = .version + "-dev." + $build + "+" + $commit' \
          deno.json > deno.json.tmp
        mv deno.json.tmp deno.json
    - if: github.ref_type == 'tag'
      run: '[[ "$(jq -r .version deno.json)" = "$GITHUB_REF_NAME" ]]'
    - run: deno task build
    - uses: actions/upload-artifact@v4
      with:
        name: dist
        path: |
          dist/*.tar.bz2
          dist/*.zip
        if-no-files-found: error
    - if: github.ref_type == 'tag'
      id: extract-changelog
      uses: dahlia/submark@ed8f47b4d51fda07e12b6e991641a8bd5ec62f8e
      with:
        input-file: CHANGES.md
        heading-level: 2
        heading-title-text: version ${{ github.ref_name }}
        ignore-case: true
        omit-heading: true
    - if: github.ref_type == 'tag'
      run: 'cat "$CHANGES_FILE"'
      env:
        CHANGES_FILE: ${{ steps.extract-changelog.outputs.output-file }}
    - if: github.ref_type == 'tag'
      uses: softprops/action-gh-release@v2
      with:
        body_path: ${{ steps.extract-changelog.outputs.output-file }}
        name: Yoyak ${{ github.ref_name }}
        generate_release_notes: false
        files: |
          dist/*.tar.bz2
          dist/*.zip
    - run: deno publish --allow-dirty

# cSpell: ignore denoland submark softprops
